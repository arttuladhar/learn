<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AWS Certified Solutions Architect Course on </title>
    <link>http://learn.aayushtuladhar.com/amazon-web-services/aws-solutions-architect/</link>
    <description>Recent content in AWS Certified Solutions Architect Course on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://learn.aayushtuladhar.com/amazon-web-services/aws-solutions-architect/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>01 - Architecture 101</title>
      <link>http://learn.aayushtuladhar.com/amazon-web-services/aws-solutions-architect/01-architecture-101/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://learn.aayushtuladhar.com/amazon-web-services/aws-solutions-architect/01-architecture-101/</guid>
      <description>Access Management Basics Shared Reponsibility Model Service Models Availability and Fault Tolerance Scalling Tiered Application Design Encryption  Access Management Basics Principal - A person or application that can make an authenticated or anonymous request to perform an action on a system.
Authentication - The process of authenticating a principal against an identity. This could be via username and passsword or API Keys.
Identity - Objects that require authentication and are authorized to access resources.</description>
    </item>
    
    <item>
      <title>02 - AWS Fundamentals</title>
      <link>http://learn.aayushtuladhar.com/amazon-web-services/aws-solutions-architect/02-aws-fundamentals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://learn.aayushtuladhar.com/amazon-web-services/aws-solutions-architect/02-aws-fundamentals/</guid>
      <description>AWS Accounts  Authentication Authorization Billing  AWS Physical and Networking Layer Well-Architected Framework  Pillars of Well Architected Framework Security Reliability Performance Efficiency Operational Excellence Cost Optimization  Elasticity Introduction to S3 - (Simple Storage Service) Introduction to Cloud Formation  AWS Accounts AWS accounts are more than just a way to log in and access AWS services â€” they are a crucial AWS feature that AWS solutions architects can use to implement secure and high-performance systems.</description>
    </item>
    
    <item>
      <title>03 - Identity and Access Control</title>
      <link>http://learn.aayushtuladhar.com/amazon-web-services/aws-solutions-architect/03-identity_access_control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://learn.aayushtuladhar.com/amazon-web-services/aws-solutions-architect/03-identity_access_control/</guid>
      <description>Identity and Access Control  IAM Essentials IAM Policies IAM Users IAM Groups IAM Access Keys  Multi-Account Management and Organizations  AWS Organizations Role Switching Between Accounts   Identity and Access Control IAM Essentials Identity and Access Management, known as IAM, is one of the key services within AWS. It controls access to the AWS API endpoints that are used by the console UI, command line tools, and any applications wanting to utilize AWS.</description>
    </item>
    
    <item>
      <title>04 (B) - Compute Services - Serverless</title>
      <link>http://learn.aayushtuladhar.com/amazon-web-services/aws-solutions-architect/04_2-compute_serverless/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://learn.aayushtuladhar.com/amazon-web-services/aws-solutions-architect/04_2-compute_serverless/</guid>
      <description>Serverless Compute  Lambda Essentials API Gateway Step Functions  Container Based Compute  ECS   Serverless Compute Serverless architecture consists of two main principles, including BaaS (Backend as a Service), which means using third party services where possible rather than running your own. Example include Auth0 or Cognito for authentication and Firebase or DynamoDb for data storage. Servless architecture uses event driven architecture using FaaS (Function as a Service) products to provide application logic.</description>
    </item>
    
    <item>
      <title>04 - Compute Services - Server Based</title>
      <link>http://learn.aayushtuladhar.com/amazon-web-services/aws-solutions-architect/04_1-compute_server_based/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://learn.aayushtuladhar.com/amazon-web-services/aws-solutions-architect/04_1-compute_server_based/</guid>
      <description>Elastic Cloud Compute (EC2) Elastic Block Storage (EBS)  Exam Facts  EBS Snapshots Security Groups Instance Metadata AMI Bootstrap Private Instance and Public Instance Advanced Topics  EC2 Instance Roles EBS Volume and Snapshot Encryption EBS Optimized, Enhanced Networking, and Placement Group EBS optimization Enhanced networking  Cluster, partition, and spread placement groups  EC2 Billing Models - Spot Instances EC2 Billing Models - Reserved Instances Dedicated Hosts   Elastic Cloud Compute (EC2) EC2 is one of the most widely used services within AWS.</description>
    </item>
    
    <item>
      <title>05 - Networking</title>
      <link>http://learn.aayushtuladhar.com/amazon-web-services/aws-solutions-architect/05-networking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://learn.aayushtuladhar.com/amazon-web-services/aws-solutions-architect/05-networking/</guid>
      <description>Networking Fundamentals  OSI Model IP Addressing Subnetting Firewall Proxy Servers  Virtual Private Cloud (VPC)  Virtual Private Cloud (VPC): VPC Routing Routes Bastion Hosts (Jump Boxes)  * Multifactor authentication, ID federation and/or IP blocks.  NAT Gateway Network ACLs VPC Peering VPC Endpoints  Global DNS (Route 53)  Hosted Zone Public Zones Private Zones Routing Policy Simple Routing Failover Routing Weighted Routing Policy Latency Based Routing GeoLocation based Routing   Networking Fundamentals OSI Model The Open Syste Interconnection (OSI) Model is a standard used by networking manufacturers globally.</description>
    </item>
    
    <item>
      <title>06 - Databases</title>
      <link>http://learn.aayushtuladhar.com/amazon-web-services/aws-solutions-architect/06_databases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://learn.aayushtuladhar.com/amazon-web-services/aws-solutions-architect/06_databases/</guid>
      <description> SQL - RDS SQL - Aurora NoSQL In-Memory Caching </description>
    </item>
    
    <item>
      <title>07 - Hybrid and Scaling</title>
      <link>http://learn.aayushtuladhar.com/amazon-web-services/aws-solutions-architect/07-hybrid-scaling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://learn.aayushtuladhar.com/amazon-web-services/aws-solutions-architect/07-hybrid-scaling/</guid>
      <description>Load Balancing and Auto Scalling Load balancing is a method used to distribute incoming connections across a group of servers or services. Incoming connections are made to the load balancer, which distributes them to associated services.
Elastic Load Balancing (ELB)  ELB is a service that provides a set of highly available and scalable load balancers in one of three versions: Classic (CLB), Application (ALB) and Network (NLB). ELBs can be paired with Auto Scaling groups to enhance high availability and fault tolerance - automating scaling / elasticity.</description>
    </item>
    
    <item>
      <title>07 - Storage and Content Delivery</title>
      <link>http://learn.aayushtuladhar.com/amazon-web-services/aws-solutions-architect/07-storage_and_content_delivery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://learn.aayushtuladhar.com/amazon-web-services/aws-solutions-architect/07-storage_and_content_delivery/</guid>
      <description> S3 Architecture and Features S3 Performance and Resilience Cloud Front Network File System </description>
    </item>
    
  </channel>
</rss>